version: '3.8'

services:
  zookeeper:
    restart: always
    container_name: zookeeper
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:latest
    restart: always
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper

  postgres:
    image: postgres:13
    restart: always
    container_name: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: metricsdb
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ./data/pgdata:/var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"

  metrics-producer:
    container_name: metrics-producer
    build: ./metrics-producer
    restart: always
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/metricsdb
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
      KAFKA_PRODUCER_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_PROFILES_ACTIVE: "dev"
    ports:
      - "8081:8080"
    depends_on:
      - kafka
      - postgres

  metrics-consumer:
    container_name: metrics-consumer
    build: ./metrics-consumer
    restart: always
    ports:
      - "8082:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/metricsdb
      SPRING_DATASOURCE_USERNAME: user
      SPRING_PROFILES_ACTIVE: "dev"
      KAFKA_CONSUMER_BOOTSTRAP_SERVERS: kafka:9092


networks:
  default:
    name: network
